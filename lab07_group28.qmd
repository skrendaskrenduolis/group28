---
title: "Lab 7 Assignment: Group 28"
format:
  html:
    embed-resources: true
editor: visual
execute: 
  warning: false
---

# Background

Up to July 15, 1992, Dr. William H. Wolberg in the University of Wisconsin Hospitals assesed breast tumor biopsies, and scored nine attributes from 1 to 10, as well as the outcome.

# Load Libraries

```{r}
library("tidyverse")
library("broom")  # devtools::install_github("tidymodels/broom")
# library(cowplot)
library("patchwork")
```

# Data description

```{r}
biopsy
plt_clump <- biopsy |>
  ggplot(aes(x = clump_thickness)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Clump thickness")

plt_uniform_cell_size <- biopsy |>
  ggplot(aes(x = uniform_cell_size)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Uniform cell size")

plt_uniform_cell_shape <- biopsy |>
  ggplot(aes(x = uniform_cell_shape)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Uniform cell shape")

plt_marg_adhesion <- biopsy |>
  ggplot(aes(x = marg_adhesion)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Marg. adhesion")


plt_epithelial_cell_size <- biopsy |>
  ggplot(aes(x = epithelial_cell_size)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Epithelial cell size")
 
plt_bare_nuclei <- biopsy |>
  ggplot(aes(x = bare_nuclei)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Bare nuclei")

plt_bland_chromatin <- biopsy |>
  ggplot(aes(x = bland_chromatin)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Bland chromatin")

plt_normal_nucleoli <- biopsy |>
  ggplot(aes(x = normal_nucleoli)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Normal nucleoli")

plt_mitoses <- biopsy |>
  ggplot(aes(x = mitoses)) +
  geom_histogram() +
  theme_minimal() + 
  labs(x = "Mitoses")

plt_clump + plt_uniform_cell_shape + plt_uniform_cell_size + plt_marg_adhesion +
plt_epithelial_cell_size + plt_bare_nuclei + plt_bland_chromatin + plt_normal_nucleoli +
plt_mitoses + plot_layout(ncol = 3, nrow = 3)
```
We can get an overview of our data by looking at the distribution of the attributes and the scores assigned to them. To start, there is no clear distribution, such as Gaussian, that can be immediately seen in the data. The distribution of assigned scores for clump thickness appears to be the most varied and uniformly distributed, with the highest count of around 125 belonging to the score of 1, followed by 5. Bland chromatin is the closest in distribution, with the first three scores of 1, 2 and 3 having similar counts, while the rest are lower. For the rest of the attributes, the majority of the counts appear to be of the score 1, with the exception of epithelial cell size where the majority of counts are of the score 2.


# Download Data

```{r}
#read data
biopsy <- read_csv("https://wilkelab.org/classes/SDS348/data_sets/biopsy.csv")
```

# PCA

```{r}
pca_fit <- biopsy |>
  select(where(is.numeric)) |> # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data
pca_fit
```

# Plot

```{r}
pca_fit_plot <- pca_fit |>
  augment(biopsy) |> # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(malignant = "#D55E00", benign = "#0072B2")) +
  theme_minimal() +
  labs(x = "PC1", y = "PC2", )

pca_fit_plot
```

```{r}
# extract rotation matrix
pca_fit %>%
  tidy(matrix = "rotation")
```

```{r}
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") %>%
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed()# fix aspect ratio to 1:1

```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")
```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  )
```
